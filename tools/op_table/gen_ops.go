// TotalJustice 2020
// 6502 instruction source: https://www.masswerk.at/6502/6502_instruction_set.html
package main

import (
	"encoding/json"
	"log"
	"os"
)

// TableFlags : stuff
type TableFlags struct {
	N string `json:"N"`
	Z string `json:"Z"`
	C string `json:"C"`
	I string `json:"I"`
	D string `json:"D"`
	V string `json:"V"`
}

// Table : stuff
type Table struct {
	Name                  string     `json:"Name"`
	AddressingMode        int        `json:"AddressingMode"`
	Opcode                int        `json:"Opcode"`
	Length                int        `json:"Length"`
	Cycles                int        `json:"Cycles"`
	ExtraCycleOnBranch    bool       `json:"ExtraCycleOnBranch"`
	ExtraCycleOnPageCross bool       `json:"ExtraCycleOnPageCross"`
	Illegal               bool       `json:"Illegal"`
	Flags                 TableFlags `json:"Flags"`
	Summary               string     `json:"Summary"`
}

const (
	IMPLIED     = 0
	ACCUMULATOR = 1
	RELATIVE    = 2
	IMMEDIATE   = 3
	ABSOLUTE    = 4
	ABSOLUTEX   = 5
	ABSOLUTEY   = 6
	ZEROPAGE    = 7
	ZEROPAGEX   = 8
	ZEROPAGEY   = 9
	INDIRECT    = 10
	INDIRECTX   = 11
	INDIRECTY   = 12
	// INFO : welcome message
	INFO = "6502 dissam gen table. By TotalJustice"
	// OUTFILE : file output
	OUTFILE = "table.json"
)

func main() {
	println(INFO)

	var entries = []Table{
		{
			Name:                  "BRK",
			AddressingMode:        IMPLIED,
			Opcode:                0x00,
			Length:                1,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "1",
				D: "-",
				V: "-",
			},
			Summary: "Force Break",
		},
		{
			Name:                  "ORA",
			AddressingMode:        INDIRECTX,
			Opcode:                0x01,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "OR Memory with Accumulator",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0x02,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "SLO",
			AddressingMode:        INDIRECTX,
			Opcode:                0x03,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift left memory then OR A register with result",
		},
		{
			Name:                  "DOP",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x04,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "ORA",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x05,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "OR Memory with Accumulator",
		},
		{
			Name:                  "ASL",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x06,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift Left One Bit (Memory or Accumulator)",
		},
		{
			Name:                  "SLO",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x07,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift left memory then OR A register with result",
		},
		{
			Name:                  "PHP",
			AddressingMode:        IMPLIED,
			Opcode:                0x08,
			Length:                1,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Push Processor Status on Stack",
		},
		{
			Name:                  "ORA",
			AddressingMode:        IMMEDIATE,
			Opcode:                0x09,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "OR Memory with Accumulator",
		},
		{
			Name:                  "ASL",
			AddressingMode:        ACCUMULATOR,
			Opcode:                0x0A,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift Left One Bit (Memory or Accumulator)",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x0B,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "TOP",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x0C,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "ORA",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x0D,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "OR Memory with Accumulator",
		},
		{
			Name:                  "ASL",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x0E,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift Left One Bit (Memory or Accumulator)",
		},
		{
			Name:                  "SLO",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x0F,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift left memory then OR A register with result",
		},
		{
			Name:                  "BPL",
			AddressingMode:        RELATIVE,
			Opcode:                0x10,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    true,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Branch on Result Plus",
		},
		{
			Name:                  "ORA",
			AddressingMode:        INDIRECTY,
			Opcode:                0x11,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "OR Memory with Accumulator",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0x12,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "SLO",
			AddressingMode:        INDIRECTY,
			Opcode:                0x13,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift left memory then OR A register with result",
		},
		{
			Name:                  "DOP",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x14,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "ORA",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x15,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "OR Memory with Accumulator",
		},
		{
			Name:                  "ASL",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x16,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift Left One Bit (Memory or Accumulator)",
		},
		{
			Name:                  "SLO",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x17,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift left memory then OR A register with result",
		},
		{
			Name:                  "CLC",
			AddressingMode:        IMPLIED,
			Opcode:                0x18,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "0",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Clear Carry Flag",
		},
		{
			Name:                  "ORA",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0x19,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "OR Memory with Accumulator",
		},
		{
			Name:                  "NOP",
			AddressingMode:        IMPLIED,
			Opcode:                0x1A,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "SLO",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0x1B,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift left memory then OR A register with result",
		},
		{
			Name:                  "TOP",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x1C,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "ORA",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x1D,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "OR Memory with Accumulator",
		},
		{
			Name:                  "ASL",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x1E,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift Left One Bit (Memory or Accumulator)",
		},
		{
			Name:                  "SLO",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x1F,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift left memory then OR A register with result",
		},
		{
			Name:                  "JSR",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x20,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Jump to New Location Saving Return Address",
		},
		{
			Name:                  "AND",
			AddressingMode:        INDIRECTX,
			Opcode:                0x21,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND Memory with Accumulator",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0x22,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "RLA",
			AddressingMode:        INDIRECTX,
			Opcode:                0x23,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate memory left then AND A register with result",
		},
		{
			Name:                  "BIT",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x24,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Test Bits in Memory with Accumulator",
		},
		{
			Name:                  "AND",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x25,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND Memory with Accumulator",
		},
		{
			Name:                  "ROL",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x26,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate One Bit Left (Memory or Accumulator)",
		},
		{
			Name:                  "RLA",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x27,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate memory left then AND A register with result",
		},
		{
			Name:                  "PLP",
			AddressingMode:        IMPLIED,
			Opcode:                0x28,
			Length:                1,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "I",
				D: "D",
				V: "V",
			},
			Summary: "Pull Processor Status from Stack",
		},
		{
			Name:                  "AND",
			AddressingMode:        IMMEDIATE,
			Opcode:                0x29,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND Memory with Accumulator",
		},
		{
			Name:                  "ROL",
			AddressingMode:        ACCUMULATOR,
			Opcode:                0x2A,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate One Bit Left (Memory or Accumulator)",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x2B,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "BIT",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x2C,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Test Bits in Memory with Accumulator",
		},
		{
			Name:                  "AND",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x2D,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND Memory with Accumulator",
		},
		{
			Name:                  "ROL",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x2E,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate One Bit Left (Memory or Accumulator)",
		},
		{
			Name:                  "RLA",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x2F,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate memory left then AND A register with result",
		},
		{
			Name:                  "BMI",
			AddressingMode:        RELATIVE,
			Opcode:                0x30,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    true,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Branch on Result Minus",
		},
		{
			Name:                  "AND",
			AddressingMode:        INDIRECTY,
			Opcode:                0x31,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND Memory with Accumulator",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0x32,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "RLA",
			AddressingMode:        INDIRECTY,
			Opcode:                0x33,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate memory left then AND A register with result",
		},
		{
			Name:                  "DOP",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x34,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "AND",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x35,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND Memory with Accumulator",
		},
		{
			Name:                  "ROL",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x36,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate One Bit Left (Memory or Accumulator)",
		},
		{
			Name:                  "RLA",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x37,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate memory left then AND A register with result",
		},
		{
			Name:                  "SEC",
			AddressingMode:        IMPLIED,
			Opcode:                0x38,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "1",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Set Carry Flag",
		},
		{
			Name:                  "AND",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0x39,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND Memory with Accumulator",
		},
		{
			Name:                  "NOP",
			AddressingMode:        IMPLIED,
			Opcode:                0x3A,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "RLA",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0x3B,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate memory left then AND A register with result",
		},
		{
			Name:                  "TOP",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x3C,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "AND",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x3D,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND Memory with Accumulator",
		},
		{
			Name:                  "ROL",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x3E,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate One Bit Left (Memory or Accumulator)",
		},
		{
			Name:                  "RLA",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x3F,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate memory left then AND A register with result",
		},
		{
			Name:                  "RTI",
			AddressingMode:        IMPLIED,
			Opcode:                0x40,
			Length:                1,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "I",
				D: "D",
				V: "V",
			},
			Summary: "Return from Interrupt",
		},
		{
			Name:                  "EOR",
			AddressingMode:        INDIRECTX,
			Opcode:                0x41,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Exclusive-OR Memory with Accumulator",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0x42,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "SRE",
			AddressingMode:        INDIRECTX,
			Opcode:                0x43,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift right memory then EOR A register with result",
		},
		{
			Name:                  "DOP",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x44,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "EOR",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x45,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Exclusive-OR Memory with Accumulator",
		},
		{
			Name:                  "LSR",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x46,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "0",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift One Bit Right (Memory or Accumulator)",
		},
		{
			Name:                  "SRE",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x47,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift right memory then EOR A register with result",
		},
		{
			Name:                  "PHA",
			AddressingMode:        IMPLIED,
			Opcode:                0x48,
			Length:                1,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Push Accumulator on Stack",
		},
		{
			Name:                  "EOR",
			AddressingMode:        IMMEDIATE,
			Opcode:                0x49,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Exclusive-OR Memory with Accumulator",
		},
		{
			Name:                  "LSR",
			AddressingMode:        ACCUMULATOR,
			Opcode:                0x4A,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "0",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift One Bit Right (Memory or Accumulator)",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x4B,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "JMP",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x4C,
			Length:                3,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Jump to New Location",
		},
		{
			Name:                  "EOR",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x4D,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Exclusive-OR Memory with Accumulator",
		},
		{
			Name:                  "LSR",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x4E,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "0",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift One Bit Right (Memory or Accumulator)",
		},
		{
			Name:                  "SRE",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x4F,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift right memory then EOR A register with result",
		},
		{
			Name:                  "BVC",
			AddressingMode:        RELATIVE,
			Opcode:                0x50,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    true,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Branch on Overflow Clear",
		},
		{
			Name:                  "EOR",
			AddressingMode:        INDIRECTY,
			Opcode:                0x51,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Exclusive-OR Memory with Accumulator",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0x52,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "SRE",
			AddressingMode:        INDIRECTY,
			Opcode:                0x43,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift right memory then EOR A register with result",
		},
		{
			Name:                  "DOP",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x54,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "EOR",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x55,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Exclusive-OR Memory with Accumulator",
		},
		{
			Name:                  "LSR",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x56,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "0",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift One Bit Right (Memory or Accumulator)",
		},
		{
			Name:                  "SRE",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x57,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift right memory then EOR A register with result",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x58,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "EOR",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0x59,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Exclusive-OR Memory with Accumulator",
		},
		{
			Name:                  "NOP",
			AddressingMode:        IMPLIED,
			Opcode:                0x5A,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "SRE",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0x5B,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift right memory then EOR A register with result",
		},
		{
			Name:                  "TOP",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x5C,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "EOR",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x5D,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Exclusive-OR Memory with Accumulator",
		},
		{
			Name:                  "LSR",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x5E,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "0",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift One Bit Right (Memory or Accumulator)",
		},
		{
			Name:                  "SRE",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x5F,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Shift right memory then EOR A register with result",
		},
		{
			Name:                  "RTS",
			AddressingMode:        IMPLIED,
			Opcode:                0x60,
			Length:                1,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Return from Subroutine",
		},
		{
			Name:                  "ADC",
			AddressingMode:        INDIRECTX,
			Opcode:                0x61,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Add Memory to Accumulator with Carry",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0x62,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "RRA",
			AddressingMode:        INDIRECTX,
			Opcode:                0x63,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Rotate memory right then ADC A register with result",
		},
		{
			Name:                  "DOP",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x64,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "ADC",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x65,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Add Memory to Accumulator with Carry",
		},
		{
			Name:                  "ROR",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x66,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate One Bit Right (Memory or Accumulator)",
		},
		{
			Name:                  "RRA",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x67,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Rotate memory right then ADC A register with result",
		},
		{
			Name:                  "PLA",
			AddressingMode:        IMPLIED,
			Opcode:                0x68,
			Length:                1,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Pull Accumulator from Stack",
		},
		{
			Name:                  "ADC",
			AddressingMode:        IMMEDIATE,
			Opcode:                0x69,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Add Memory to Accumulator with Carry",
		},
		{
			Name:                  "ROR",
			AddressingMode:        ACCUMULATOR,
			Opcode:                0x6A,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate One Bit Right (Memory or Accumulator)",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x6B,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "JMP",
			AddressingMode:        INDIRECT,
			Opcode:                0x6C,
			Length:                3,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Jump to New Location",
		},
		{
			Name:                  "ADC",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x6D,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Add Memory to Accumulator with Carry",
		},
		{
			Name:                  "ROR",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x6E,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate One Bit Right (Memory or Accumulator)",
		},
		{
			Name:                  "RRA",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x6F,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Rotate memory right then ADC A register with result",
		},
		{
			Name:                  "BVS",
			AddressingMode:        RELATIVE,
			Opcode:                0x70,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    true,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Branch on Overflow Set",
		},
		{
			Name:                  "ADC",
			AddressingMode:        INDIRECTY,
			Opcode:                0x71,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Add Memory to Accumulator with Carry",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0x72,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "RRA",
			AddressingMode:        INDIRECTY,
			Opcode:                0x73,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Rotate memory right then ADC A register with result",
		},
		{
			Name:                  "DOP",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x74,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "ADC",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x75,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Add Memory to Accumulator with Carry",
		},
		{
			Name:                  "ROR",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x76,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate One Bit Right (Memory or Accumulator)",
		},
		{
			Name:                  "RRA",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x77,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Rotate memory right then ADC A register with result",
		},
		{
			Name:                  "SEI",
			AddressingMode:        IMPLIED,
			Opcode:                0x78,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "1",
				D: "-",
				V: "-",
			},
			Summary: "Set Interrupt Disable Status",
		},
		{
			Name:                  "ADC",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0x79,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Add Memory to Accumulator with Carry",
		},
		{
			Name:                  "NOP",
			AddressingMode:        IMPLIED,
			Opcode:                0x7A,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "RRA",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0x7B,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Rotate memory right then ADC A register with result",
		},
		{
			Name:                  "TOP",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x7C,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "ADC",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x7D,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Add Memory to Accumulator with Carry",
		},
		{
			Name:                  "ROR",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x7E,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Rotate One Bit Right (Memory or Accumulator)",
		},
		{
			Name:                  "RRA",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x7F,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Rotate memory right then ADC A register with result",
		},
		{
			Name:                  "DOP",
			AddressingMode:        IMMEDIATE,
			Opcode:                0x80,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "STA",
			AddressingMode:        INDIRECTX,
			Opcode:                0x81,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Accumulator in Memory",
		},
		{
			Name:                  "DOP",
			AddressingMode:        IMMEDIATE,
			Opcode:                0x82,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "SAX",
			AddressingMode:        INDIRECTX,
			Opcode:                0x83,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND X register with accumulator and store result in memory",
		},
		{
			Name:                  "STY",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x84,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Index Y in Memory",
		},
		{
			Name:                  "STA",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x85,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Accumulator in Memory",
		},
		{
			Name:                  "STX",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x86,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Index X in Memory",
		},
		{
			Name:                  "SAX",
			AddressingMode:        ZEROPAGE,
			Opcode:                0x87,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND X register with accumulator and store result in memory",
		},
		{
			Name:                  "DEY",
			AddressingMode:        IMPLIED,
			Opcode:                0x88,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Decrement Index Y by One",
		},
		{
			Name:                  "DOP",
			AddressingMode:        IMMEDIATE,
			Opcode:                0x89,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "TXA",
			AddressingMode:        IMPLIED,
			Opcode:                0x8A,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Transfer Index X to Accumulator",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x8B,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "STY",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x8C,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Index Y in Memory",
		},
		{
			Name:                  "STA",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x8D,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Accumulator in Memory",
		},
		{
			Name:                  "STX",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x8E,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Index X in Memory",
		},
		{
			Name:                  "SAX",
			AddressingMode:        ABSOLUTE,
			Opcode:                0x8F,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND X register with accumulator and store result in memory",
		},
		{
			Name:                  "BCC",
			AddressingMode:        RELATIVE,
			Opcode:                0x90,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    true,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Branch on Carry Clear",
		},
		{
			Name:                  "STA",
			AddressingMode:        INDIRECTY,
			Opcode:                0x91,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Accumulator in Memory",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0x92,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x93,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "STY",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x94,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Index Y in Memory",
		},
		{
			Name:                  "STA",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0x95,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Accumulator in Memory",
		},
		{
			Name:                  "STX",
			AddressingMode:        ZEROPAGEY,
			Opcode:                0x96,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Index X in Memory",
		},
		{
			Name:                  "SAX",
			AddressingMode:        ZEROPAGEY,
			Opcode:                0x97,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "AND X register with accumulator and store result in memory",
		},
		{
			Name:                  "TYA",
			AddressingMode:        IMPLIED,
			Opcode:                0x98,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Transfer Index Y to Accumulator",
		},
		{
			Name:                  "STA",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0x99,
			Length:                3,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Accumulator in Memory",
		},
		{
			Name:                  "TXS",
			AddressingMode:        IMPLIED,
			Opcode:                0x9A,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Transfer Index X to Stack Register",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x9B,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x9C,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "STA",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0x9D,
			Length:                3,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Store Accumulator in Memory",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x9E,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0x9F,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "LDY",
			AddressingMode:        IMMEDIATE,
			Opcode:                0xA0,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Index Y with Memory",
		},
		{
			Name:                  "LDA",
			AddressingMode:        INDIRECTX,
			Opcode:                0xA1,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Accumulator with Memory",
		},
		{
			Name:                  "LDX",
			AddressingMode:        IMMEDIATE,
			Opcode:                0xA2,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Index X with Memory",
		},
		{
			Name:                  "LAX",
			AddressingMode:        INDIRECTX,
			Opcode:                0xA3,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load accumulator and X register with memory",
		},
		{
			Name:                  "LDY",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xA4,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Index Y with Memory",
		},
		{
			Name:                  "LDA",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xA5,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Accumulator with Memory",
		},
		{
			Name:                  "LDX",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xA6,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Index X with Memory",
		},
		{
			Name:                  "LAX",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xA7,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load accumulator and X register with memory",
		},
		{
			Name:                  "TAY",
			AddressingMode:        IMPLIED,
			Opcode:                0xA8,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Transfer Accumulator to Index Y",
		},
		{
			Name:                  "LDA",
			AddressingMode:        IMMEDIATE,
			Opcode:                0xA9,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Accumulator with Memory",
		},
		{
			Name:                  "TAX",
			AddressingMode:        IMPLIED,
			Opcode:                0xAA,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Transfer Accumulator to Index X",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0xAB,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "LDY",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xAC,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Index Y with Memory",
		},
		{
			Name:                  "LDA",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xAD,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Accumulator with Memory",
		},
		{
			Name:                  "LDX",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xAE,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Index X with Memory",
		},
		{
			Name:                  "LAX",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xAF,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load accumulator and X register with memory",
		},
		{
			Name:                  "BCS",
			AddressingMode:        RELATIVE,
			Opcode:                0xB0,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    true,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Branch on Carry Set",
		},
		{
			Name:                  "LDA",
			AddressingMode:        INDIRECTY,
			Opcode:                0xB1,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Accumulator with Memory",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0xB2,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "LAX",
			AddressingMode:        INDIRECTY,
			Opcode:                0xB3,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load accumulator and X register with memory",
		},
		{
			Name:                  "LDY",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0xB4,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Index Y with Memory",
		},
		{
			Name:                  "LDA",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0xB5,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Accumulator with Memory",
		},
		{
			Name:                  "LDX",
			AddressingMode:        ZEROPAGEY,
			Opcode:                0xB6,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Index X with Memory",
		},
		{
			Name:                  "LAX",
			AddressingMode:        ZEROPAGEY,
			Opcode:                0xB7,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load accumulator and X register with memory",
		},
		{
			Name:                  "CLV",
			AddressingMode:        IMPLIED,
			Opcode:                0xB8,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "0",
			},
			Summary: "Clear Overflow Flag",
		},
		{
			Name:                  "LDA",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0xB9,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Accumulator with Memory",
		},
		{
			Name:                  "TSX",
			AddressingMode:        IMPLIED,
			Opcode:                0xBA,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Transfer Stack Pointer to Index X",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0xBB,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "LDY",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0xBC,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Index Y with Memory",
		},
		{
			Name:                  "LDA",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0xBD,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Accumulator with Memory",
		},
		{
			Name:                  "LDX",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0xBE,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load Index X with Memory",
		},
		{
			Name:                  "LAX",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0xBF,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Load accumulator and X register with memory",
		},
		{
			Name:                  "CPY",
			AddressingMode:        IMMEDIATE,
			Opcode:                0xC0,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory and Index Y",
		},
		{
			Name:                  "CMP",
			AddressingMode:        INDIRECTX,
			Opcode:                0xC1,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory with Accumulator",
		},
		{
			Name:                  "DOP",
			AddressingMode:        IMMEDIATE,
			Opcode:                0xC2,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "DCP",
			AddressingMode:        INDIRECTX,
			Opcode:                0xC3,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "DEC memory then CMP result with A register",
		},
		{
			Name:                  "CPY",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xC4,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory and Index Y",
		},
		{
			Name:                  "CMP",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xC5,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory with Accumulator",
		},
		{
			Name:                  "DEC",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xC6,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Decrement Memory by One",
		},
		{
			Name:                  "DCP",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xC7,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "DEC memory then CMP result with A register",
		},
		{
			Name:                  "INY",
			AddressingMode:        IMPLIED,
			Opcode:                0xC8,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Increment Index Y by One",
		},
		{
			Name:                  "CMP",
			AddressingMode:        IMMEDIATE,
			Opcode:                0xC9,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory with Accumulator",
		},
		{
			Name:                  "DEX",
			AddressingMode:        IMPLIED,
			Opcode:                0xCA,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Decrement Index X by One",
		},
		{
			Name:                  "-",
			AddressingMode:        IMPLIED,
			Opcode:                0xCB,
			Length:                0,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "-",
		},
		{
			Name:                  "CPY",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xCC,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory and Index Y",
		},
		{
			Name:                  "CMP",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xCD,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory with Accumulator",
		},
		{
			Name:                  "DEC",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xCE,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Decrement Memory by One",
		},
		{
			Name:                  "DCP",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xCF,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "DEC memory then CMP result with A register",
		},
		{
			Name:                  "BNE",
			AddressingMode:        RELATIVE,
			Opcode:                0xD0,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    true,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Branch on Result not Zero",
		},
		{
			Name:                  "CMP",
			AddressingMode:        INDIRECTY,
			Opcode:                0xD1,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory with Accumulator",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0xD2,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "DCP",
			AddressingMode:        INDIRECTY,
			Opcode:                0xD3,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "DEC memory then CMP result with A register",
		},
		{
			Name:                  "DOP",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0xD4,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "CMP",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0xD5,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory with Accumulator",
		},
		{
			Name:                  "DEC",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0xD6,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Decrement Memory by One",
		},
		{
			Name:                  "DCP",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0xD7,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "DEC memory then CMP result with A register",
		},
		{
			Name:                  "CLD",
			AddressingMode:        IMPLIED,
			Opcode:                0xD8,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "0",
				V: "-",
			},
			Summary: "Clear Decimal Mode",
		},
		{
			Name:                  "CMP",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0xD9,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory with Accumulator",
		},
		{
			Name:                  "NOP",
			AddressingMode:        IMPLIED,
			Opcode:                0xDA,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "DCP",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0xDB,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "DEC memory then CMP result with A register",
		},
		{
			Name:                  "TOP",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0xDC,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "CMP",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0xDD,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory with Accumulator",
		},
		{
			Name:                  "DEC",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0xDE,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Decrement Memory by One",
		},
		{
			Name:                  "DCP",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0xDF,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "DEC memory then CMP result with A register",
		},
		{
			Name:                  "CPX",
			AddressingMode:        IMMEDIATE,
			Opcode:                0xE0,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory and Index X",
		},
		{
			Name:                  "SBC",
			AddressingMode:        INDIRECTX,
			Opcode:                0xE1,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Subtract Memory from Accumulator with Borrow",
		},
		{
			Name:                  "NOP",
			AddressingMode:        IMMEDIATE,
			Opcode:                0xE2,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "ISC",
			AddressingMode:        INDIRECTX,
			Opcode:                0xE3,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "INC memory then SBC A register from result",
		},
		{
			Name:                  "CPX",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xE4,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory and Index X",
		},
		{
			Name:                  "SBC",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xE5,
			Length:                2,
			Cycles:                3,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Subtract Memory from Accumulator with Borrow",
		},
		{
			Name:                  "INC",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xE6,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Increment Memory by One",
		},
		{
			Name:                  "ISC",
			AddressingMode:        ZEROPAGE,
			Opcode:                0xE7,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "INC memory then SBC result with A register",
		},
		{
			Name:                  "INX",
			AddressingMode:        IMPLIED,
			Opcode:                0xE8,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Increment Index X by One",
		},
		{
			Name:                  "SBC",
			AddressingMode:        IMMEDIATE,
			Opcode:                0xE9,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Subtract Memory from Accumulator with Borrow",
		},
		{
			Name:                  "NOP",
			AddressingMode:        IMPLIED,
			Opcode:                0xEA,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "SBC",
			AddressingMode:        IMMEDIATE,
			Opcode:                0xEB,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Subtract Memory from Accumulator with Borrow",
		},
		{
			Name:                  "CPX",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xEC,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Compare Memory and Index X",
		},
		{
			Name:                  "SBC",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xED,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Subtract Memory from Accumulator with Borrow",
		},
		{
			Name:                  "INC",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xEE,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Increment Memory by One",
		},
		{
			Name:                  "ISC",
			AddressingMode:        ABSOLUTE,
			Opcode:                0xEF,
			Length:                3,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "INC memory then SBC result with A register",
		},
		{
			Name:                  "BEQ",
			AddressingMode:        RELATIVE,
			Opcode:                0xF0,
			Length:                2,
			Cycles:                2,
			ExtraCycleOnBranch:    true,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Branch on Result Zero",
		},
		{
			Name:                  "SBC",
			AddressingMode:        INDIRECTY,
			Opcode:                0xF1,
			Length:                2,
			Cycles:                5,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Subtract Memory from Accumulator with Borrow",
		},
		{
			Name:                  "STP",
			AddressingMode:        IMPLIED,
			Opcode:                0xF2,
			Length:                1,
			Cycles:                0,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Stop program counter (processor lock up)",
		},
		{
			Name:                  "ISC",
			AddressingMode:        INDIRECTY,
			Opcode:                0xF3,
			Length:                2,
			Cycles:                8,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "INC memory then SBC result with A register",
		},
		{
			Name:                  "DOP",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0xF4,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "SBC",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0xF5,
			Length:                2,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Subtract Memory from Accumulator with Borrow",
		},
		{
			Name:                  "INC",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0xF6,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Increment Memory by One",
		},
		{
			Name:                  "ISC",
			AddressingMode:        ZEROPAGEX,
			Opcode:                0xF7,
			Length:                2,
			Cycles:                6,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "INC memory then SBC result with A register",
		},
		{
			Name:                  "SED",
			AddressingMode:        IMPLIED,
			Opcode:                0xF8,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "1",
				V: "-",
			},
			Summary: "Set Decimal Flag",
		},
		{
			Name:                  "SBC",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0xF9,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Subtract Memory from Accumulator with Borrow",
		},
		{
			Name:                  "NOP",
			AddressingMode:        IMPLIED,
			Opcode:                0xFA,
			Length:                1,
			Cycles:                2,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "ISC",
			AddressingMode:        ABSOLUTEY,
			Opcode:                0xFB,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "INC memory then SBC result with A register",
		},
		{
			Name:                  "TOP",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0xFC,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               true,
			Flags: TableFlags{
				N: "-",
				Z: "-",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "No Operation",
		},
		{
			Name:                  "SBC",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0xFD,
			Length:                3,
			Cycles:                4,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: true,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "Subtract Memory from Accumulator with Borrow",
		},
		{
			Name:                  "INC",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0xFE,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               false,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "-",
				I: "-",
				D: "-",
				V: "-",
			},
			Summary: "Increment Memory by One",
		},
		{
			Name:                  "ISC",
			AddressingMode:        ABSOLUTEX,
			Opcode:                0xFF,
			Length:                3,
			Cycles:                7,
			ExtraCycleOnBranch:    false,
			ExtraCycleOnPageCross: false,
			Illegal:               true,
			Flags: TableFlags{
				N: "N",
				Z: "Z",
				C: "C",
				I: "-",
				D: "-",
				V: "V",
			},
			Summary: "INC memory then SBC result with A register",
		},
	}

	// we marshell to a buffer so that it can be indented.
	// json.Encode does not indent.
	jsonData, err := json.MarshalIndent(entries, "", "\t")
	if err != nil {
		log.Fatal(err)
	}

	file, err := os.OpenFile(OUTFILE, os.O_TRUNC|os.O_CREATE|os.O_WRONLY, 0755)
	if err != nil {
		log.Fatal(err)
	}

	file.Write(jsonData)

	println("done!")
}
